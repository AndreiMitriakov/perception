<?xml version="1.0"?>
<launch>

    <include file="$(find astra_camera)/launch/astra.launch"/>

    <include file="$(find jsk_pcl_ros)/launch/organized_multi_plane_segmentation.launch">
        <arg name="INPUT" value="/camera/depth/points" />
    </include>

  <!--<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video2" />
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="camera_rgb_optical_frame" />
    <param name="io_method" value="mmap"/>
    <param name="camera_info_url" type="string" value="$(find perception)/config/rgb_17051910058.yaml"/>
  </node> -->
    <!--<param name="camera_info_url" type="string" value="$(find perception)/config/rgb_17051910058.yaml"/>

  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/usb_cam/image_raw"/>
    <param name="autosize" value="true" />
  </node>-->

    <!--
        <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
            <remap from="image" to="/usb_cam/image_raw"/>
            <param name="autosize" value="true" />
        </node> 
    -->
    <!--<include file="$(find jsk_pcl_ros)/launch/organized_multi_plane_segmentation.launch"/>
     Convert it into a point cloud 
    <node pkg="nodelet" type="nodelet" name="cloudify"
        args="load depth_image_proc/point_cloud_xyzrgb record_player_manager - - no-bond">
        <remap from="depth_registered/image_rect" to="camera/depth/image"/>
        <remap from="depth_registered/points" to="camera/depth_registered/points"/>
        <remap from="rgb/image_rect_color" to="$(arg cloud_input_ns)/image_rect_color"/>
        <remap from="rgb/camera_info" to="$(arg cloud_input_ns)/camera_info"/>
    </node>-->
</launch>
